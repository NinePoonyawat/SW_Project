@startuml Class Diagram

left to right direction

class App <<Application>> {
}

class RentalCars <<Resource>> {
  <<GET>> + getRentalCars() : RentalCarSchema
  <<POST>> + createRentalCar() : RentalCarSchema
}

class RentalCar <<Resource>> {
  <<GET>> + getRentalCar(hotelId: ObjectId) : RentalCarSchema
  <<PUT>> + updateRentalCar(hotelId: ObjectId) : RentalCarSchema
  <<DELETE>> + deleteRentalCar(hotelId: ObjectId) : void
}

class Rentals <<Resource>> {
  <<GET>> + getRentals() : RentalSchema
  <<POST>> + createRental() : RentalSchema
}

class Rental <<Resource>> {
  <<GET>> + getRental(bookingId: ObjectId) : RentalSchema
  <<PUT>> + updateRental(bookingId: ObjectId) : RentalSchema
  <<DELETE>> + deleteRental(bookingId: ObjectId) : void
}

class Auth <<Resource>> {
  <<POST>> + register() : UserSchema
  <<POST>> + login() : UserSchema
  <<GET>> + me() : UserSchema
  <<GET>> + logout() : void
}

class RentalCarSchema <<Representation>>{
  + carBrand: String
  + model: String
  + pricePerDay: Number
  + year: Number
  + color: String
  + licensePlate: String
  + mileage: Number
  + fuelType: String
  + transmission: String
  + seats: Number
  + rented: Boolean
}

class RentalSchema <<Representation>>{
  + startDate: Date
  + endDate: Date
  + user: ObjectId
  + rentalCar: ObjectId
  + createdAt: Date
}

class UserSchema <<Representation>> {
  +_id: ObjectId
  +name: String
  +email: String
  +role: String
  +password: String
  +resetPasswordToken: String
  +resetPasswordExpire: Date
  +createdAt: Date
}

App --> RentalCars : /rentalCars <<Path>>
App --> Rentals : /rentals <<Path>>
App --> Auth : /auth <<Path>>
Auth --> UserSchema : uses 
RentalCars --> RentalCar : /{rentalCarId} <<Path>>
RentalCar --> RentalCarSchema : uses

RentalCar --> Rentals : /bookings <<Path>>

Rentals --> Rental : /{rentalId} <<Path>>
Rental --> RentalSchema : uses

@enduml
